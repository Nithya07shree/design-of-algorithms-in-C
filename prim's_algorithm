#include<stdio.h>
#include<conio.h>
void prim(int cost[100][100],int n,int visited[100],int p[100],int d[100])
{
int mincost,count=0,i,j,v,source,u,t[100][2],k,sum;
k=0;
sum=0;
mincost=999;
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
{
if(cost[i][j]<mincost)
{
mincost=cost[i][j];
source=i;
}
}
}
for(i=0;i<n;i++)
{
visited[i]=0;
p[i]=source;
d[i]=cost[source][i];
}
visited[source]=1;
for(i=0;i<n;i++)
{
u=-1;
mincost=999;
for(j=0;j<n;j++)
{
if((visited[j]==0) && (d[j]<mincost))
{
mincost=d[j];
u=j;
}
}
if(u==-1)
break;
visited[u]=1;
t[k][0]=p[u];
t[k][1]=u;
count++;
k++;
sum=sum+mincost;
for(v=0;v<n;v++)
{
if((visited[v]==0) &&(cost[u][v]<d[v]))
{
d[v]=cost[u][v];
p[v]=u;
}
}
}
if(count==n-1)
{
printf("\n Spanning tree exists\nEdges of spanning tree are:\n");
for(i=0;i<n-1;i++)
printf("%d->%d\n",t[i][0],t[i][1]);
printf("Cost of spanning tree: %d",sum);
}
else
printf("Spanning tree doesn't exist\n");
}
void main()
{
int n,j,i,cost[100][100],visited[100],p[100],d[100];
clrscr();
printf("Enter the no. of vertices: ");
scanf("%d",&n);
printf("Enter the cost adjacency matrix:\n");
for(i=0;i<n;i++)
for(j=0;j<n;j++)
scanf("%d",&cost[i][j]);
prim(cost,n,visited,p,d);
getch();
}
